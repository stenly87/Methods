// Подпрограммы (Методы в C#)
// Функция и Процедура
// обособленный блок кода, функция возвращает результат
// Метод - и процедура и функция, метод может возвращать
// результат, а может не возращать
// Если метод ведет себя как процедура, то он включает
// в своем заголовке слово void
class Program
{
    static void Main()
    {
        ClientCode();
    }
    // рекурсия - возможность метода вызывать самого себя
    // можно спокойно вызвать stack overflow
    static double Plus(int x, int y)
    {
        if (x < 100)
            x += 10;
        else
            return x;
        return x * Plus(x, y);
    }

    // синтаксис объявления метода
    // заголовок
    // тело, обособленное {}
    // модификатор_доступа статичность тип_возвр_знач имя (аргументы)
    // return в методах void прерывает выполнение метода
    // return в методах с указанным типом возвращаемого значения
    // должны быть в обязательном порядке в любом варианте завершения метода
    // и при этом должны возвращать значение совместимое с указанным типом

    // аргументы могут отсутствовать, но скобки быть обязаны
    // существует несколько ключевых слов, которые можно использовать с аргументами
    // аргументы могут иметь значение по умолчанию
    // params
    /*
    static void SayMessage(int count,string text = "Hello")
    {
        for (int i = 0; i < count; i++)
            Console.WriteLine(text);
    }

    static bool Calc(out int x)
    {
        x = 10;
        return true;
    }
    // reference - ссылка

    static void ClientCode()
    {
        int value1 = 0;
        bool hitted = Calc(out value1);
        if (hitted)
        {

        }
        Console.WriteLine($"{value1} {hitted}");
    }*/
    // params может быть использовано только для последнего аргумента
    static void ClientCode()
    {
        int summa = Summ(1, 2, 3, 4, 5, 6);
    }

    static int Summ(params int[] array)
    {
        return array.Sum();
    }
}